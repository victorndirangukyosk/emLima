/*!
 * kwikbasket
 * KwikBasket Landing Page
 * 
 * @author KwikBasket
 * @version 1.0.0
 * Copyright 2020. MIT licensed.
 */
!function(e,t,s,a){"use strict";e(function(){e(s).scroll(function(){var t=e(".fixed-top");t.toggleClass("scrolled",e(this).scrollTop()>t.height())}),e(".nav-link, .navbar-brand").click(function(){var t=e(this).attr("href");e("html, body").animate({scrollTop:e(t).offset().top},700)}),ScrollOut(),gsap.to(".anim-from-top",{opacity:1,y:0,duration:.5,ease:"elastic"}),gsap.to(".anim-from-bottom",{y:0,duration:.5}),e(s).delegate("#login-button","click",function(t){t.preventDefault();const s=e("#login-button"),a=e("#login-email").val(),i=e("#login-password").val();a.length>0&&i.length>0?(s.text("PLEASE WAIT"),s.toggleClass("disabled"),e.ajax({url:"index.php?path=account/login/login",type:"post",data:{email:a,password:i},dataType:"json",success:function(t){t.status?"1"==t.temppassword?(location=e(".base_url").attr("href")+"/changepass",console.log(e(".base_url"))):location=e(".base_url").attr("href"):(iziToast.error({position:"topRight",message:t.error_warning}),s.text("LOGIN"),s.toggleClass("disabled"))}})):iziToast.warning({position:"topRight",message:"Please enter your email and password"})}),e("#register-phone").keyup(function(e){/\D/g.test(this.value)&&(this.value=this.value.replace(/\D/g,""))}),e(s).delegate("#register-button","click",function(t){t.preventDefault();const s=e("#register-first-name").val(),a=e("#register-last-name").val(),i=e("#register-email").val(),o=e("#register-phone").val(),r=e("#register-company-name").val(),n=e("#register-company-address").val(),l=e("#register-business-type").val(),g=e("#register-building-name").val(),c=e("#register-address-line").val(),p=e("#register-location").val(),u=e("#register-password").val(),d=e("#register-password-confirm").val(),m=e("#registration-view"),f=e("#otp-view"),h=e("#register-button"),v=e("#register-form")[0],w=v.reportValidity();w&&(d!==u?iziToast.warning({position:"topRight",message:"Passwords do no match"}):""==grecaptcha.getResponse()?iziToast.warning({position:"topRight",message:"Please complete captcha"}):(h.text("PLEASE WAIT"),h.toggleClass("disabled"),e.ajax({url:"index.php?path=account/register/register_send_otp",type:"POST",dataType:"json",data:{firstname:s,lastname:a,email:i,telephone:o,company_name:r,company_address:n,customer_group_id:l,house_building:g,address:c,location:p,password:u,confirm:d},success:function(e){h.text("SIGN UP"),h.toggleClass("disabled"),e.status?(iziToast.success({position:"topRight",message:e.success_message}),m.hide(),f.show()):iziToast.warning({position:"topRight",title:"Oops",message:"We couldn't create your account"})}})))}),e(s).delegate("#otp-verify-button","click",function(s){s.preventDefault();const a=e("#register-first-name").val(),i=e("#register-last-name").val(),o=e("#register-email").val(),r=e("#register-phone").val(),n=e("#register-company-name").val(),l=e("#register-company-address").val(),g=e("#register-business-type").val(),c=e("#register-building-name").val(),p=e("#register-address-line").val(),u=e("#register-location").val(),d=e("#register-password").val(),m=e("#register-password-confirm").val(),f=e("#otp-value").val(),h=e("#otp-verify-button");f.length>3?(h.text("PLEASE WAIT"),h.toggleClass("disabled"),e.ajax({url:"index.php?path=account/register/register_verify_otp",type:"POST",dataType:"json",data:{firstname:a,lastname:i,email:o,telephone:r,company_name:n,company_address:l,customer_group_id:g,house_building:c,address:p,location:u,password:d,confirm:m,signup_otp:f},success:function(s){h.text("VERIFY"),h.toggleClass("disabled"),e("#otp-value").val(""),s.status?(iziToast.success({timeout:!1,position:"topRight",message:s.success_message}),setTimeout(function(){t.location=e(".base_url").attr("href")},3e3)):iziToast.warning({position:"topRight",message:"We couldn't verify your account. Please check the OTP"})}})):iziToast.error({position:"topRight",message:"Please enter a valid OTP"})}),e("#forgot-password-btn").click(function(t){t.preventDefault(),e("#login-view").hide(),e("#forgot-password-view").show()}),e("#password-reset-button").click(function(t){t.preventDefault();const s=e("#reset-password-email").val(),a=e("#password-reset-button");0==s.length?iziToast.warning({position:"topRight",message:"Please enter your account email"}):(a.text("PLEASE WAIT"),a.toggleClass("disabled"),e.ajax({url:"index.php?path=account/forgotten",type:"POST",dataType:"json",data:{email:s},success:function(t){a.text("RESET PASSWORD"),a.toggleClass("disabled"),e("#reset-password-email").val(""),t.status?iziToast.success({timeout:!1,position:"topRight",message:t.text_message}):iziToast.warning({position:"topRight",message:"We couldn't find an account with that email address"})}}))}),e("#farmer-register-button").click(function(t){t.preventDefault();e("#farmer-first-name").val(),e("#farmer-last-name").val(),e("#farmer-email").val(),e("#farmer-phone").val(),e("#farmer-type").val(),e("#farmer-location").val(),e("farmer-produce-grown").val(),e("#farmer-register-button");""==grecaptcha.getResponse()?iziToast.warning({position:"topRight",message:"Please complete captcha"}):e("#farmer-registration-form")[0].reportValidity()&&(iziToast.success({position:"topRight",message:"Thanks for registering. We'll get in touch"}),e("#farmer-registration-form")[0].reset())})})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
