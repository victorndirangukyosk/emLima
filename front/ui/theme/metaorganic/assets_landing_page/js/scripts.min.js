/*!
 * kwikbasket
 * KwikBasket Landing Page
 * 
 * @author KwikBasket
 * @version 1.0.0
 * Copyright 2021. MIT licensed.
 */
!function(e,t,a,s){"use strict";function o(){navigator.geolocation?(console.log(1),navigator.geolocation.getCurrentPosition(i,null,{enableHighAccuracy:!0,timeout:5e3,maximumAge:0})):(console.log(2),console.log("Geolocation is not supported by this browser."))}function i(t){console.log("showPositionOnly"),console.log(t),e("#lat").val(t.coords.latitude),e("#lng").val(t.coords.longitude),console.log(t.coords.latitude),console.log(t.coords.longitude)}o(),e(function(){e(a).scroll(function(){var t=e(".fixed-top");t.toggleClass("scrolled",e(this).scrollTop()>t.height())}),e(".nav-link, .navbar-brand").click(function(){var t=e(this).attr("href");e("html, body").animate({scrollTop:e(t).offset().top},700)}),ScrollOut(),gsap.to(".anim-from-top",{opacity:1,y:0,duration:.5,ease:"elastic"}),gsap.to(".anim-from-bottom",{y:0,duration:.5}),e("input[name='register-accountmanager-id']").autocomplete({source:function(t,a){e.ajax({url:"index.php?path=account/login/autocompleteaccountmanager&filter_name="+e("input[name='register-accountmanager-id']").val(),dataType:"json",success:function(t){a(e.map(t,function(e){return{label:e.firstname,value:e.user_id}}))}})},select:function(t,a){return console.log(a.item.label),console.log(a.item.value),e("input[name='register-accountmanager-id']").val(a.item.label),e("input[name='register-accountmanager-id']").attr("register_accountmanager_id",a.item.value),!1}}),e(a).delegate("#login-button","click",function(a){o(),a.preventDefault();const s=e("#login-button");var i=e("#lat").val(),r=e("#lng").val();const n=e("#login-email").val(),l=e("#login-password").val();n.length>0&&l.length>0?(s.text("PLEASE WAIT"),s.toggleClass("disabled"),e.ajax({url:"index.php?path=account/login/checkipaddress",type:"post",data:{email:n,password:l},dataType:"json",success:function(a){console.log(a),"Username And Password Doest Match!"==a.message?iziToast.error({position:"topRight",message:"Username And Password Doest Match!"}):1==a.isnewIP?e.ajax({url:"index.php?path=account/login/addSendNewIPotp",type:"POST",dataType:"json",data:{email:n},success:function(t){t.status?(iziToast.success({position:"topRight",message:"OTP Is Sent To Mail!"}),e("#login-view").hide(),e("#otp-view").show()):iziToast.warning({position:"topRight",title:"Oops",message:"Something Went Wrong!"})}}):e.ajax({url:"index.php?path=account/login/login",type:"post",data:{email:n,password:l,login_latitude:i,login_longitude:r,login_mode:"web"},dataType:"json",success:function(a){a.status?null!=a.redirect?t.location.href=a.redirect:"1"==a.temppassword?(location=e(".base_url").attr("href")+"/changepass",console.log(e(".base_url"))):location=e(".base_url").attr("href"):(iziToast.error({position:"topRight",message:a.error_warning}),s.text("LOGIN"),s.toggleClass("disabled"))}})}})):iziToast.warning({position:"topRight",message:"Please enter your email and password"})}),e("#register-phone").keyup(function(e){/\D/g.test(this.value)&&(this.value=this.value.replace(/\D/g,""))}),e(a).delegate("#register-button","click",function(t){o(),t.preventDefault();var a=e("#lat").val(),s=e("#lng").val(),i=/^(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{6,}$/;const r=e("#register-first-name").val(),n=e("#register-last-name").val(),l=e("#register-email").val(),c=e("#register-phone").val(),g=e("#register-company-name").val(),p=e("#register-company-address").val(),d=e("#register-business-type").val(),u=e("#register-building-name").val(),m=e("#register-address-line").val(),v=e("#register-location").val(),h=e("#register-password").val(),f=e("#register-password-confirm").val(),y=e("#register-accountmanager-id").val(),b=e("#city-id").val(),_=e("#registration-view"),T=e("#otp-view"),w=e("#register-button"),x=e("#address_lat").val(),P=e("#address_lng").val(),R=e("#register-form")[0],z=R.reportValidity();z&&(b<=0?iziToast.warning({position:"topRight",message:"Please select city"}):f!==h?iziToast.warning({position:"topRight",message:"Passwords do no match"}):i.test(h)?""==grecaptcha.getResponse()?iziToast.warning({position:"topRight",message:"Please complete captcha"}):(w.text("PLEASE WAIT"),w.toggleClass("disabled"),e.ajax({url:"index.php?path=account/register/register_send_otp",type:"POST",dataType:"json",data:{login_latitude:a,login_longitude:s,firstname:r,lastname:n,email:l,telephone:c,company_name:g,company_address:p,customer_group_id:d,house_building:u,address:m,location:v,password:h,confirm:f,accountmanagerid:y,address_lat:x,address_lng:P,cityid:b},success:function(e){w.text("SIGN UP"),w.toggleClass("disabled"),e.status?(iziToast.success({position:"topRight",message:e.success_message}),_.hide(),T.show()):iziToast.warning({position:"topRight",title:"Oops",message:e.error_message})}})):(console.log(h),iziToast.warning({position:"topRight",message:"Password must contain 6 characters 1 capital(A-Z) 1 numeric(0-9) 1 special(@$!%*#?&)"})))}),e(a).delegate("#otp-verify-button","click",function(a){a.preventDefault();var s=e("#lat").val(),o=e("#lng").val();const i=e("#register-first-name").val(),r=e("#register-last-name").val(),n=e("#register-email").val(),l=e("#register-phone").val(),c=e("#register-company-name").val(),g=e("#register-company-address").val(),p=e("#register-business-type").val(),d=e("#register-building-name").val(),u=e("#register-address-line").val(),m=e("#register-location").val(),v=e("#register-password").val(),h=e("#register-password-confirm").val(),f=e("#register-accountmanager-id").val(),y=e("#address_lat").val(),b=e("#address_lng").val(),_=e("#city-id").val(),T=e("#otp-value").val(),w=e("#otp-verify-button");T.length>3?(w.text("PLEASE WAIT"),w.toggleClass("disabled"),e.ajax({url:"index.php?path=account/register/register_verify_otp",type:"POST",dataType:"json",data:{login_latitude:s,login_longitude:o,firstname:i,lastname:r,email:n,telephone:l,company_name:c,company_address:g,customer_group_id:p,house_building:d,address:u,location:m,password:v,confirm:h,accountmanagerid:f,address_lat:y,address_lng:b,signup_otp:T,cityid:_},success:function(a){w.text("VERIFY"),w.toggleClass("disabled"),e("#otp-value").val(""),a.status?(iziToast.success({timeout:!1,position:"topRight",message:a.success_message}),setTimeout(function(){t.location=e(".base_url").attr("href")},3e3)):iziToast.warning({position:"topRight",message:"We couldn't verify your account. Please check the OTP"})}})):iziToast.error({position:"topRight",message:"Please enter a valid OTP"})}),e(a).delegate("#ip-otp-verify-button","click",function(a){a.preventDefault();const s=e("#login-email").val(),o=e("#otp-value").val();var i=e("#lat").val(),r=e("#lng").val();const n=e("#login-password").val(),l=e("#otp-verify-button");o.length>3?(l.text("PLEASE WAIT"),l.toggleClass("disabled"),e.ajax({url:"index.php?path=account/login/addVerifyNewIPotp",type:"POST",dataType:"json",data:{email:s,otp:o},success:function(a){l.text("VERIFY"),l.toggleClass("disabled"),e("#otp-value").val(""),a.status?(iziToast.success({timeout:!1,position:"topRight",message:"Will be redirecting to login page!"}),setTimeout(function(){a.status&&e.ajax({url:"index.php?path=account/login/login",type:"post",data:{email:s,password:n,login_latitude:i,login_longitude:r,login_mode:"web"},dataType:"json",success:function(a){a.status?null!=a.redirect?t.location.href=a.redirect:"1"==a.temppassword?(location=e(".base_url").attr("href")+"/changepass",console.log(e(".base_url"))):location=e(".base_url").attr("href"):(iziToast.error({position:"topRight",message:a.error_warning}),location=e(".base_url").attr("href"),loginButton.text("LOGIN"),loginButton.toggleClass("disabled"))}})},1500)):iziToast.warning({position:"topRight",message:"We couldn't verify your account. Please check the OTP"})}})):iziToast.error({position:"topRight",message:"Please enter a valid OTP"})}),e(a).delegate("#careers-submit-button","click",function(t){t.preventDefault();const a=e("#careers-first-name").val(),s=e("#careers-last-name").val(),o=e("#careers-designation").val(),i=e("#careers-about-yourself").val(),r=e("#careers-job-id").val(),n=e("#careers-cover-letter").val(),l=e("#careers-form")[0],c=l.reportValidity(),g=e("#careers-submit-button");c&&(""==grecaptcha.getResponse()?iziToast.warning({position:"topRight",message:"Please complete captcha"}):(g.text("PLEASE WAIT"),g.toggleClass("disabled"),e.ajax({url:"index.php?path=common/home/savecareers",type:"POST",dataType:"json",data:{firstname:a,lastname:s,role:o,yourself:i,job_id:r,cover:n},success:function(t){g.toggleClass("disabled"),t.status?(iziToast.success({position:"topRight",message:t.success_message}),e("#careers-form")[0].reset(),g.text("SUBMIT")):iziToast.warning({position:"topRight",title:"Oops",message:t.error_warning})}})))}),e(a).delegate("#partner-registration-button","click",function(t){t.preventDefault();const a=e("#partner-first-name").val(),s=e("#partner-last-name").val(),o=e("#partner-designation").val(),i=e("#partner-company-name").val(),r=e("#partner-email").val(),n=e("#partner-phone").val(),l=e("#partner-description").val(),c=e("#partner-registration-form")[0],g=c.reportValidity(),p=e("#partner-registration-button");g&&(""==grecaptcha.getResponse()?iziToast.warning({position:"topRight",message:"Please complete captcha"}):(p.text("PLEASE WAIT"),p.toggleClass("disabled"),e.ajax({url:"index.php?path=common/home/savepartner",type:"POST",dataType:"json",data:{firstname:a,lastname:s,designation:o,company:i,email:r,phone:n,description:l},success:function(t){p.toggleClass("disabled"),t.status?(iziToast.success({position:"topRight",message:t.success_message}),e("#partner-registration-form")[0].reset()):iziToast.warning({position:"topRight",title:"Oops",message:t.error_warning})}})))}),e("#forgot-password-btn").click(function(t){t.preventDefault(),e("#login-view").hide(),e("#forgot-password-view").show()}),e("#password-reset-button").click(function(t){t.preventDefault();const a=e("#reset-password-email").val(),s=e("#password-reset-button");0==a.length?iziToast.warning({position:"topRight",message:"Please enter your account email"}):(s.text("PLEASE WAIT"),s.toggleClass("disabled"),e.ajax({url:"index.php?path=account/forgotten",type:"POST",dataType:"json",data:{email:a},success:function(t){s.text("RESET PASSWORD"),s.toggleClass("disabled"),e("#reset-password-email").val(""),t.status?iziToast.success({timeout:!1,position:"topRight",message:t.text_message}):iziToast.warning({position:"topRight",message:"We couldn't find an account with that email address"})}}))}),e("#farmer-register-button").click(function(t){console.log("Farmer Registration!"),t.preventDefault();var a=e("#lat").val(),s=e("#lng").val();const o=e("#farmer-first-name").val(),i=e("#farmer-last-name").val(),r=e("#farmer-email").val(),n=e("#farmer-phone").val(),l=e("#farmer-type").val(),c=e("#farmer-location").val(),g=e("#irrigation-type").val(),p=e("#farmer-produce-grown").val(),d=e("#farm-size").val(),u=e("#farm-size-type").val(),m=e("#farmer-organization").val(),v=e("#farmer-register-button");""==grecaptcha.getResponse()?iziToast.warning({position:"topRight",message:"Please complete captcha"}):e("#farmer-registration-form")[0].reportValidity()&&(v.text("PLEASE WAIT"),v.toggleClass("disabled"),e.ajax({url:"index.php?path=account/farmerregister/register",type:"POST",dataType:"json",data:{first_name:o,last_name:i,email:r,telephone:n,farmer_type:l,farmer_location:c,farmer_irrigation_type:g,farmer_description:p,farmsize:d,farmerorganization:m,farmsizetype:u,login_latitude:a,login_longitude:s},success:function(t){v.text("REGISTER"),v.toggleClass("disabled"),t.status?(iziToast.success({position:"topRight",message:t.success_message}),e("#farmer-registration-form")[0].reset()):iziToast.warning({position:"topRight",title:"Oops",message:t.error_warning+" We couldn't register you. Please try again"})}}))}),e("#careers-job-category, #careers-job-type, #careers-job-location").change(function(){var t="index.php?path=common/home/careers";e("#careers-job-category").val();filter_category&&"All Job Category"!=filter_category&&(t+="&filter_category="+encodeURIComponent(filter_category));var a=e("#careers-job-type").val();a&&"All Job Type"!=a&&(t+="&filter_type="+encodeURIComponent(a));var s=e("#careers-job-location").val();s&&"All Job Location"!=s&&(t+="&filter_location="+encodeURIComponent(s)),location=t})});e("#lat"),e("#lng");e(a).delegate(":input","keyup change",function(e){o()})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
