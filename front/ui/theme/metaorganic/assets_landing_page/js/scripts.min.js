/*!
 * kwikbasket
 * KwikBasket Landing Page
 * 
 * @author KwikBasket
 * @version 1.0.0
 * Copyright 2020. MIT licensed.
 */
!function(e,t,s,a){"use strict";e(function(){e(s).scroll(function(){var t=e(".fixed-top");t.toggleClass("scrolled",e(this).scrollTop()>t.height())}),e(".nav-link, .navbar-brand").click(function(){var t=e(this).attr("href");e("html, body").animate({scrollTop:e(t).offset().top},700)}),ScrollOut(),gsap.to(".anim-from-top",{opacity:1,y:0,duration:.5,ease:"elastic"}),gsap.to(".anim-from-bottom",{y:0,duration:.5}),e(s).delegate("#login-button","click",function(s){s.preventDefault();const a=e("#login-button"),i=e("#login-email").val(),o=e("#login-password").val();i.length>0&&o.length>0?(a.text("PLEASE WAIT"),a.toggleClass("disabled"),e.ajax({url:"index.php?path=account/login/login",type:"post",data:{email:i,password:o},dataType:"json",success:function(s){s.status?null!=s.redirect?t.location.href=s.redirect:"1"==s.temppassword?(location=e(".base_url").attr("href")+"/changepass",console.log(e(".base_url"))):location=e(".base_url").attr("href"):(iziToast.error({position:"topRight",message:s.error_warning}),a.text("LOGIN"),a.toggleClass("disabled"))}})):iziToast.warning({position:"topRight",message:"Please enter your email and password"})}),e("#register-phone").keyup(function(e){/\D/g.test(this.value)&&(this.value=this.value.replace(/\D/g,""))}),e(s).delegate("#register-button","click",function(t){t.preventDefault();const s=e("#register-first-name").val(),a=e("#register-last-name").val(),i=e("#register-email").val(),o=e("#register-phone").val(),r=e("#register-company-name").val(),n=e("#register-company-address").val(),l=e("#register-business-type").val(),g=e("#register-building-name").val(),p=e("#register-address-line").val(),c=e("#register-location").val(),u=e("#register-password").val(),d=e("#register-password-confirm").val(),m=e("#registration-view"),f=e("#otp-view"),h=e("#register-button"),v=e("#register-form")[0],w=v.reportValidity();w&&(d!==u?iziToast.warning({position:"topRight",message:"Passwords do no match"}):""==grecaptcha.getResponse()?iziToast.warning({position:"topRight",message:"Please complete captcha"}):(h.text("PLEASE WAIT"),h.toggleClass("disabled"),e.ajax({url:"index.php?path=account/register/register_send_otp",type:"POST",dataType:"json",data:{firstname:s,lastname:a,email:i,telephone:o,company_name:r,company_address:n,customer_group_id:l,house_building:g,address:p,location:c,password:u,confirm:d},success:function(e){h.text("SIGN UP"),h.toggleClass("disabled"),e.status?(iziToast.success({position:"topRight",message:e.success_message}),m.hide(),f.show()):iziToast.warning({position:"topRight",title:"Oops",message:e.error_warning})}})))}),e(s).delegate("#otp-verify-button","click",function(s){s.preventDefault();const a=e("#register-first-name").val(),i=e("#register-last-name").val(),o=e("#register-email").val(),r=e("#register-phone").val(),n=e("#register-company-name").val(),l=e("#register-company-address").val(),g=e("#register-business-type").val(),p=e("#register-building-name").val(),c=e("#register-address-line").val(),u=e("#register-location").val(),d=e("#register-password").val(),m=e("#register-password-confirm").val(),f=e("#otp-value").val(),h=e("#otp-verify-button");f.length>3?(h.text("PLEASE WAIT"),h.toggleClass("disabled"),e.ajax({url:"index.php?path=account/register/register_verify_otp",type:"POST",dataType:"json",data:{firstname:a,lastname:i,email:o,telephone:r,company_name:n,company_address:l,customer_group_id:g,house_building:p,address:c,location:u,password:d,confirm:m,signup_otp:f},success:function(s){h.text("VERIFY"),h.toggleClass("disabled"),e("#otp-value").val(""),s.status?(iziToast.success({timeout:!1,position:"topRight",message:s.success_message}),setTimeout(function(){t.location=e(".base_url").attr("href")},3e3)):iziToast.warning({position:"topRight",message:"We couldn't verify your account. Please check the OTP"})}})):iziToast.error({position:"topRight",message:"Please enter a valid OTP"})}),e("#forgot-password-btn").click(function(t){t.preventDefault(),e("#login-view").hide(),e("#forgot-password-view").show()}),e("#password-reset-button").click(function(t){t.preventDefault();const s=e("#reset-password-email").val(),a=e("#password-reset-button");0==s.length?iziToast.warning({position:"topRight",message:"Please enter your account email"}):(a.text("PLEASE WAIT"),a.toggleClass("disabled"),e.ajax({url:"index.php?path=account/forgotten",type:"POST",dataType:"json",data:{email:s},success:function(t){a.text("RESET PASSWORD"),a.toggleClass("disabled"),e("#reset-password-email").val(""),t.status?iziToast.success({timeout:!1,position:"topRight",message:t.text_message}):iziToast.warning({position:"topRight",message:"We couldn't find an account with that email address"})}}))}),e("#farmer-register-button").click(function(t){t.preventDefault();e("#farmer-first-name").val(),e("#farmer-last-name").val(),e("#farmer-email").val(),e("#farmer-phone").val(),e("#farmer-type").val(),e("#farmer-location").val(),e("farmer-produce-grown").val(),e("#farmer-register-button");""==grecaptcha.getResponse()?iziToast.warning({position:"topRight",message:"Please complete captcha"}):e("#farmer-registration-form")[0].reportValidity()&&(iziToast.success({position:"topRight",message:"Thanks for registering. We'll get in touch"}),e("#farmer-registration-form")[0].reset())})})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiJCIsIndpbmRvdyIsImRvY3VtZW50IiwidW5kZWZpbmVkIiwic2Nyb2xsIiwiJG5hdiIsInRvZ2dsZUNsYXNzIiwidGhpcyIsInNjcm9sbFRvcCIsImhlaWdodCIsImNsaWNrIiwic2VjdGlvblRvIiwiYXR0ciIsImFuaW1hdGUiLCJvZmZzZXQiLCJ0b3AiLCJTY3JvbGxPdXQiLCJnc2FwIiwidG8iLCJvcGFjaXR5IiwieSIsImR1cmF0aW9uIiwiZWFzZSIsImRlbGVnYXRlIiwiZSIsInByZXZlbnREZWZhdWx0IiwibG9naW5CdXR0b24iLCJlbWFpbCIsInZhbCIsInBhc3N3b3JkIiwibGVuZ3RoIiwidGV4dCIsImFqYXgiLCJ1cmwiLCJ0eXBlIiwiZGF0YSIsImRhdGFUeXBlIiwic3VjY2VzcyIsImpzb24iLCJsb2NhdGlvbiIsImhyZWYiLCJjb25zb2xlIiwibG9nIiwiaXppVG9hc3QiLCJlcnJvciIsInBvc2l0aW9uIiwibWVzc2FnZSIsIndhcm5pbmciLCJrZXl1cCIsInRlc3QiLCJ2YWx1ZSIsInJlcGxhY2UiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInBob25lIiwiY29tcGFueU5hbWUiLCJjb21wYW55QWRkcmVzcyIsImJ1c2luZXNzVHlwZSIsImJ1aWxkaW5nTmFtZSIsImFkZHJlc3NMaW5lIiwicGFzc3dvcmRDb25maXJtYXRpb24iLCJyZWdpc3RyYXRpb25WaWV3Iiwib3RwVmlldyIsInJlZ2lzdGVyQnV0dG9uIiwicmVnaXN0ZXJGb3JtIiwiZm9ybUlzVmFsaWQiLCJyZXBvcnRWYWxpZGl0eSIsImdyZWNhcHRjaGEiLCJnZXRSZXNwb25zZSIsImZpcnN0bmFtZSIsImxhc3RuYW1lIiwidGVsZXBob25lIiwiY29tcGFueV9uYW1lIiwiY29tcGFueV9hZGRyZXNzIiwiY3VzdG9tZXJfZ3JvdXBfaWQiLCJob3VzZV9idWlsZGluZyIsImFkZHJlc3MiLCJjb25maXJtIiwiaGlkZSIsInNob3ciLCJ0aXRsZSIsIm90cCIsInZlcmlmeUJ1dHRvbiIsInNpZ251cF9vdHAiLCJ0aW1lb3V0Iiwic2V0VGltZW91dCIsInJlc2V0QnV0dG9uIiwicmVzZXQiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0NBQUEsU0FBQUEsRUFBQUMsRUFBQUMsRUFBQUMsR0FFQSxZQUVBSCxHQUFBLFdBRUFBLEVBQUFFLEdBQUFFLE9BQUEsV0FDQSxHQUFBQyxHQUFBTCxFQUFBLGFBQ0FLLEdBQUFDLFlBQUEsV0FBQU4sRUFBQU8sTUFBQUMsWUFBQUgsRUFBQUksWUFJQVQsRUFBQSw0QkFBQVUsTUFBQSxXQUNBLEdBQUFDLEdBQUFYLEVBQUFPLE1BQUFLLEtBQUEsT0FDQVosR0FBQSxjQUFBYSxTQUNBTCxVQUFBUixFQUFBVyxHQUFBRyxTQUFBQyxLQUNBLE9BSUFDLFlBR0FDLEtBQUFDLEdBQUEsa0JBQ0FDLFFBQUEsRUFDQUMsRUFBQSxFQUNBQyxTQUFBLEdBQ0FDLEtBQUEsWUFHQUwsS0FBQUMsR0FBQSxxQkFDQUUsRUFBQSxFQUNBQyxTQUFBLEtBSUFyQixFQUFBRSxHQUFBcUIsU0FBQSxnQkFBQSxRQUFBLFNBQUFDLEdBQ0FBLEVBQUFDLGdCQUVBLE1BQUFDLEdBQUExQixFQUFBLGlCQUNBMkIsRUFBQTNCLEVBQUEsZ0JBQUE0QixNQUNBQyxFQUFBN0IsRUFBQSxtQkFBQTRCLEtBRUFELEdBQUFHLE9BQUEsR0FBQUQsRUFBQUMsT0FBQSxHQUNBSixFQUFBSyxLQUFBLGVBQ0FMLEVBQUFwQixZQUFBLFlBQ0FOLEVBQUFnQyxNQUNBQyxJQUFBLHFDQUNBQyxLQUFBLE9BQ0FDLE1BQUFSLE1BQUFBLEVBQUFFLFNBQUFBLEdBQ0FPLFNBQUEsT0FDQUMsUUFBQSxTQUFBQyxHQUNBQSxFQUFBLE9BQ0EsTUFBQUEsRUFBQSxTQUNBckMsRUFBQXNDLFNBQUFDLEtBQUFGLEVBQUEsU0FFQSxLQUFBQSxFQUFBLGNBQ0FDLFNBQUF2QyxFQUFBLGFBQUFZLEtBQUEsUUFBQSxjQUNBNkIsUUFBQUMsSUFBQTFDLEVBQUEsZUFHQXVD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TixTQUNBK0MsU0FBQSxFQUNBdkMsU0FBQSxXQUNBQyxRQUFBUixFQUFBLGVBR0FLLFNBQUFJLFNBQ0FGLFNBQUEsV0FDQUMsUUFBQSw4REFRQTlDLEVBQUEsMkJBQUFVLE1BQUEsU0FBQWMsR0FDQUEsRUFBQUMsZ0JBRUF6QixHQUFBLHNCQUFBNEIsTUFDQTVCLEVBQUEscUJBQUE0QixNQUNBNUIsRUFBQSxpQkFBQTRCLE1BQ0E1QixFQUFBLGlCQUFBNEIsTUFDQTVCLEVBQUEsZ0JBQUE0QixNQUNBNUIsRUFBQSxvQkFBQTRCLE1BQ0E1QixFQUFBLHdCQUFBNEIsTUFFQTVCLEVBQUEsMEJBRUEsS0FBQW1FLFdBQUFDLGNBQ0F6QixTQUFBSSxTQUNBRixTQUFBLFdBQ0FDLFFBQUEsNEJBR0E5QyxFQUFBLDZCQUFBLEdBQUFrRSxtQkFDQXZCLFNBQUFOLFNBQ0FRLFNBQUEsV0FDQUMsUUFBQSwrQ0FHQTlDLEVBQUEsNkJBQUEsR0FBQXVGLGNBdUNBQyxPQUFBdkYsT0FBQUMiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuXG4gICd1c2Ugc3RyaWN0JztcblxuICAkKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBDaGFuZ2UgbmF2YmFyIHN0eWxlIG9uIHNjcm9sbFxuICAgICQoZG9jdW1lbnQpLnNjcm9sbChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJG5hdiA9ICQoJy5maXhlZC10b3AnKTtcbiAgICAgICRuYXYudG9nZ2xlQ2xhc3MoJ3Njcm9sbGVkJywgJCh0aGlzKS5zY3JvbGxUb3AoKSA+ICRuYXYuaGVpZ2h0KCkpO1xuICAgIH0pO1xuXG4gICAgLy8gTmF2IGxpbmtzIHNjcm9sbCBhbmltYXRpb25cbiAgICAkKCcubmF2LWxpbmssIC5uYXZiYXItYnJhbmQnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc2VjdGlvblRvID0gJCh0aGlzKS5hdHRyKCdocmVmJyk7XG4gICAgICAkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7XG4gICAgICAgIHNjcm9sbFRvcDogJChzZWN0aW9uVG8pLm9mZnNldCgpLnRvcFxuICAgICAgfSwgNzAwKTtcbiAgICB9KTtcblxuICAgIC8vIExhbmRpbmcgcGFnZSBzY3JvbGwgYW5pbWF0aW9uc1xuICAgIFNjcm9sbE91dCgpO1xuXG4gICAgLy8gSGVybyBzZWN0aW9uIGFuaW1hdGlvblxuICAgIGdzYXAudG8oJy5hbmltLWZyb20tdG9wJywge1xuICAgICAgb3BhY2l0eTogMSxcbiAgICAgIHk6IDAsIFxuICAgICAgZHVyYXRpb246IC41LFxuICAgICAgZWFzZTogJ2VsYXN0aWMnXG4gICAgfSk7XG5cbiAgICBnc2FwLnRvKCcuYW5pbS1mcm9tLWJvdHRvbScsIHtcbiAgICAgIHk6IDAsIFxuICAgICAgZHVyYXRpb246IC41XG4gICAgfSk7XG5cbiAgICAvLyBDdXN0b21lciBMb2dpblxuICAgICQoZG9jdW1lbnQpLmRlbGVnYXRlKCcjbG9naW4tYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgY29uc3QgbG9naW5CdXR0b24gPSAkKCcjbG9naW4tYnV0dG9uJyk7XG4gICAgICBjb25zdCBlbWFpbCA9ICQoJyNsb2dpbi1lbWFpbCcpLnZhbCgpO1xuICAgICAgY29uc3QgcGFzc3dvcmQgPSAkKCcjbG9naW4tcGFzc3dvcmQnKS52YWwoKTtcblxuICAgICAgaWYoZW1haWwubGVuZ3RoID4gMCAmJiBwYXNzd29yZC5sZW5ndGggPiAwKSB7XG4gICAgICAgIGxvZ2luQnV0dG9uLnRleHQoJ1BMRUFTRSBXQUlUJyk7XG4gICAgICAgIGxvZ2luQnV0dG9uLnRvZ2dsZUNsYXNzKCdkaXNhYmxlZCcpO1xuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgIHVybDogJ2luZGV4LnBocD9wYXRoPWFjY291bnQvbG9naW4vbG9naW4nLFxuICAgICAgICAgIHR5cGU6ICdwb3N0JyxcbiAgICAgICAgICBkYXRhOiB7IGVtYWlsOiBlbWFpbCwgcGFzc3dvcmQ6IHBhc3N3b3JkIH0sXG4gICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoanNvbikge1xuICAgICAgICAgICAgaWYgKGpzb25bJ3N0YXR1cyddKSB7XG4gICAgICAgICAgICAgIGlmKGpzb25bJ3JlZGlyZWN0J10gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBqc29uWydyZWRpcmVjdCddO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGVsc2UgaWYgKGpzb25bJ3RlbXBwYXNzd29yZCddID09ICcxJykge1xuICAgICAgICAgICAgICAgIGxvY2F0aW9uID0gJCgnLmJhc2VfdXJsJykuYXR0cignaHJlZicpICsgJy9jaGFuZ2VwYXNzJztcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygkKCcuYmFzZV91cmwnKSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbG9jYXRpb24gPSAkKCcuYmFzZV91cmwnKS5hdHRyKCdocmVmJyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGl6aVRvYXN0LmVycm9yKHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcFJpZ2h0JyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBqc29uWydlcnJvcl93YXJuaW5nJ11cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIGxvZ2luQnV0dG9uLnRleHQoJ0xPR0lOJyk7XG4gICAgICAgICAgICAgIGxvZ2luQnV0dG9uLnRvZ2dsZUNsYXNzKCdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpemlUb2FzdC53YXJuaW5nKHtcbiAgICAgICAgICBwb3NpdGlvbjogJ3RvcFJpZ2h0JyxcbiAgICAgICAgICBtZXNzYWdlOiAnUGxlYXNlIGVudGVyIHlvdXIgZW1haWwgYW5kIHBhc3N3b3JkJ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIEN1c3RvbWVyIFJlZ2lzdHJhdGlvblxuXG4gICAgJCgnI3JlZ2lzdGVyLXBob25lJykua2V5dXAoZnVuY3Rpb24oZSkge1xuICAgICAgaWYgKC9cXEQvZy50ZXN0KHRoaXMudmFsdWUpKSB7XG4gICAgICAgIC8vIEZpbHRlciBvdXQgbm9uLWRpZ2l0cyBmcm9tIGlucHV0IHZhbHVlXG4gICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLnZhbHVlLnJlcGxhY2UoL1xcRC9nLCAnJyk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAkKGRvY3VtZW50KS5kZWxlZ2F0ZSgnI3JlZ2lzdGVyLWJ1dHRvbicsICdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIGNvbnN0IGZpcnN0TmFtZSA9ICQoJyNyZWdpc3Rlci1maXJzdC1uYW1lJykudmFsKCk7XG4gICAgICBjb25zdCBsYXN0TmFtZSA9ICQoJyNyZWdpc3Rlci1sYXN0LW5hbWUnKS52YWwoKTtcbiAgICAgIGNvbnN0IGVtYWlsID0gJCgnI3JlZ2lzdGVyLWVtYWlsJykudmFsKCk7XG4gICAgICBjb25zdCBwaG9uZSA9ICQoJyNyZWdpc3Rlci1waG9uZScpLnZhbCgpO1xuICAgICAgY29uc3QgY29tcGFueU5hbWUgPSAkKCcjcmVnaXN0ZXItY29tcGFueS1uYW1lJykudmFsKCk7IFxuICAgICAgY29uc3QgY29tcGFueUFkZHJlc3MgPSAkKCcjcmVnaXN0ZXItY29tcGFueS1hZGRyZXNzJykudmFsKCk7XG4gICAgICBjb25zdCBidXNpbmVzc1R5cGUgPSAkKCcjcmVnaXN0ZXItYnVzaW5lc3MtdHlwZScpLnZhbCgpO1xuICAgICAgY29uc3QgYnVpbGRpbmdOYW1lID0gJCgnI3JlZ2lzdGVyLWJ1aWxkaW5nLW5hbWUnKS52YWwoKTtcbiAgICAgIGNvbnN0IGFkZHJlc3NMaW5lID0gJCgnI3JlZ2lzdGVyLWFkZHJlc3MtbGluZScpLnZhbCgpO1xuICAgICAgY29uc3QgbG9jYXRpb24gPSAkKCcjcmVnaXN0ZXItbG9jYXRpb24nKS52YWwoKTtcbiAgICAgIGNvbnN0IHBhc3N3b3JkID0gJCgnI3JlZ2lzdGVyLXBhc3N3b3JkJykudmFsKCk7XG4gICAgICBjb25zdCBwYXNzd29yZENvbmZpcm1hdGlvbiA9ICQoJyNyZWdpc3Rlci1wYXNzd29yZC1jb25maXJtJykudmFsKCk7XG4gICAgICBcbiAgICAgIGNvbnN0IHJlZ2lzdHJhdGlvblZpZXcgPSAkKCcjcmVnaXN0cmF0aW9uLXZpZXcnKTtcbiAgICAgIGNvbnN0IG90cFZpZXcgPSAkKCcjb3RwLXZpZXcnKTtcblxuICAgICAgY29uc3QgcmVnaXN0ZXJCdXR0b24gPSAkKCcjcmVnaXN0ZXItYnV0dG9uJyk7XG4gICAgICBjb25zdCByZWdpc3RlckZvcm0gPSAkKCcjcmVnaXN0ZXItZm9ybScpWzBdO1xuICAgICAgY29uc3QgZm9ybUlzVmFsaWQgPSByZWdpc3RlckZvcm0ucmVwb3J0VmFsaWRpdHkoKTtcblxuICAgICAgaWYoZm9ybUlzVmFsaWQpIHtcbiAgICAgICAgaWYocGFzc3dvcmRDb25maXJtYXRpb24gIT09IHBhc3N3b3JkKSB7XG4gICAgICAgICAgaXppVG9hc3Qud2FybmluZyh7XG4gICAgICAgICAgICBwb3NpdGlvbjogJ3RvcFJpZ2h0JyxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdQYXNzd29yZHMgZG8gbm8gbWF0Y2gnXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYoZ3JlY2FwdGNoYS5nZXRSZXNwb25zZSgpID09ICcnKSB7XG4gICAgICAgICAgICBpemlUb2FzdC53YXJuaW5nKHtcbiAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3BSaWdodCcsXG4gICAgICAgICAgICAgIG1lc3NhZ2U6ICdQbGVhc2UgY29tcGxldGUgY2FwdGNoYSdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZWdpc3RlckJ1dHRvbi50ZXh0KCdQTEVBU0UgV0FJVCcpO1xuICAgICAgICAgICAgcmVnaXN0ZXJCdXR0b24udG9nZ2xlQ2xhc3MoJ2Rpc2FibGVkJyk7XG5cbiAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgIHVybDogJ2luZGV4LnBocD9wYXRoPWFjY291bnQvcmVnaXN0ZXIvcmVnaXN0ZXJfc2VuZF9vdHAnLFxuICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbicsXG4gICAgICAgICAgICAgIGRhdGE6IHsgXG4gICAgICAgICAgICAgICAgZmlyc3RuYW1lOiBmaXJzdE5hbWUsIFxuICAgICAgICAgICAgICAgIGxhc3RuYW1lOiBsYXN0TmFtZSxcbiAgICAgICAgICAgICAgICBlbWFpbDogZW1haWwsXG4gICAgICAgICAgICAgICAgdGVsZXBob25lOiBwaG9uZSxcbiAgICAgICAgICAgICAgICBjb21wYW55X25hbWU6IGNvbXBhbnlOYW1lLFxuICAgICAgICAgICAgICAgIGNvbXBhbnlfYWRkcmVzczogY29tcGFueUFkZHJlc3MsXG4gICAgICAgICAgICAgICAgY3VzdG9tZXJfZ3JvdXBfaWQ6IGJ1c2luZXNzVHlwZSxcbiAgICAgICAgICAgICAgICBob3VzZV9idWlsZGluZzogYnVpbGRpbmdOYW1lLFxuICAgICAgICAgICAgICAgIGFkZHJlc3M6IGFkZHJlc3NMaW5lLFxuICAgICAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQsXG4gICAgICAgICAgICAgICAgY29uZmlybTogcGFzc3dvcmRDb25maXJtYXRpb25cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGpzb24pIHtcbiAgICAgICAgICAgICAgICByZWdpc3RlckJ1dHRvbi50ZXh0KCdTSUdOIFVQJyk7XG4gICAgICAgICAgICAgICAgcmVnaXN0ZXJCdXR0b24udG9nZ2xlQ2xhc3MoJ2Rpc2FibGVkJyk7XG5cbiAgICAgICAgICAgICAgICBpZiAoanNvblsnc3RhdHVzJ10pIHtcbiAgICAgICAgICAgICAgICAgIGl6aVRvYXN0LnN1Y2Nlc3Moe1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcFJpZ2h0JyxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZToganNvblsnc3VjY2Vzc19tZXNzYWdlJ11cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICByZWdpc3RyYXRpb25WaWV3LmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgIG90cFZpZXcuc2hvdygpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICBpemlUb2FzdC53YXJuaW5nKHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3BSaWdodCcsXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnT29wcycsXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGpzb25bJ2Vycm9yX3dhcm5pbmcnXVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIE9UUCBWZXJpZmljYXRpb25cbiAgICAkKGRvY3VtZW50KS5kZWxlZ2F0ZSgnI290cC12ZXJpZnktYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgY29uc3QgZmlyc3ROYW1lID0gJCgnI3JlZ2lzdGVyLWZpcnN0LW5hbWUnKS52YWwoKTtcbiAgICAgIGNvbnN0IGxhc3ROYW1lID0gJCgnI3JlZ2lzdGVyLWxhc3QtbmFtZScpLnZhbCgpO1xuICAgICAgY29uc3QgZW1haWwgPSAkKCcjcmVnaXN0ZXItZW1haWwnKS52YWwoKTtcbiAgICAgIGNvbnN0IHBob25lID0gJCgnI3JlZ2lzdGVyLXBob25lJykudmFsKCk7XG4gICAgICBjb25zdCBjb21wYW55TmFtZSA9ICQoJyNyZWdpc3Rlci1jb21wYW55LW5hbWUnKS52YWwoKTsgXG4gICAgICBjb25zdCBjb21wYW55QWRkcmVzcyA9ICQoJyNyZWdpc3Rlci1jb21wYW55LWFkZHJlc3MnKS52YWwoKTtcbiAgICAgIGNvbnN0IGJ1c2luZXNzVHlwZSA9ICQoJyNyZWdpc3Rlci1idXNpbmVzcy10eXBlJykudmFsKCk7XG4gICAgICBjb25zdCBidWlsZGluZ05hbWUgPSAkKCcjcmVnaXN0ZXItYnVpbGRpbmctbmFtZScpLnZhbCgpO1xuICAgICAgY29uc3QgYWRkcmVzc0xpbmUgPSAkKCcjcmVnaXN0ZXItYWRkcmVzcy1saW5lJykudmFsKCk7XG4gICAgICBjb25zdCBsb2NhdGlvbiA9ICQoJyNyZWdpc3Rlci1sb2NhdGlvbicpLnZhbCgpO1xuICAgICAgY29uc3QgcGFzc3dvcmQgPSAkKCcjcmVnaXN0ZXItcGFzc3dvcmQnKS52YWwoKTtcbiAgICAgIGNvbnN0IHBhc3N3b3JkQ29uZmlybWF0aW9uID0gJCgnI3JlZ2lzdGVyLXBhc3N3b3JkLWNvbmZpcm0nKS52YWwoKTtcbiAgICAgIFxuICAgICAgY29uc3Qgb3RwID0gJCgnI290cC12YWx1ZScpLnZhbCgpO1xuICAgICAgY29uc3QgdmVyaWZ5QnV0dG9uID0gJCgnI290cC12ZXJpZnktYnV0dG9uJyk7XG5cbiAgICAgIGlmKG90cC5sZW5ndGggPiAzKSB7XG4gICAgICAgIHZlcmlmeUJ1dHRvbi50ZXh0KCdQTEVBU0UgV0FJVCcpO1xuICAgICAgICB2ZXJpZnlCdXR0b24udG9nZ2xlQ2xhc3MoJ2Rpc2FibGVkJyk7XG5cbiAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICB1cmw6ICdpbmRleC5waHA/cGF0aD1hY2NvdW50L3JlZ2lzdGVyL3JlZ2lzdGVyX3ZlcmlmeV9vdHAnLFxuICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgICAgIGRhdGE6IHsgXG4gICAgICAgICAgICBmaXJzdG5hbWU6IGZpcnN0TmFtZSwgXG4gICAgICAgICAgICBsYXN0bmFtZTogbGFzdE5hbWUsXG4gICAgICAgICAgICBlbWFpbDogZW1haWwsXG4gICAgICAgICAgICB0ZWxlcGhvbmU6IHBob25lLFxuICAgICAgICAgICAgY29tcGFueV9uYW1lOiBjb21wYW55TmFtZSxcbiAgICAgICAgICAgIGNvbXBhbnlfYWRkcmVzczogY29tcGFueUFkZHJlc3MsXG4gICAgICAgICAgICBjdXN0b21lcl9ncm91cF9pZDogYnVzaW5lc3NUeXBlLFxuICAgICAgICAgICAgaG91c2VfYnVpbGRpbmc6IGJ1aWxkaW5nTmFtZSxcbiAgICAgICAgICAgIGFkZHJlc3M6IGFkZHJlc3NMaW5lLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLFxuICAgICAgICAgICAgY29uZmlybTogcGFzc3dvcmRDb25maXJtYXRpb24sXG4gICAgICAgICAgICBzaWdudXBfb3RwOiBvdHBcbiAgICAgICAgICB9LFxuICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChqc29uKSB7XG4gICAgICAgICAgICB2ZXJpZnlCdXR0b24udGV4dCgnVkVSSUZZJyk7XG4gICAgICAgICAgICB2ZXJpZnlCdXR0b24udG9nZ2xlQ2xhc3MoJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgICAkKCcjb3RwLXZhbHVlJykudmFsKCcnKTtcblxuICAgICAgICAgICAgaWYgKGpzb25bJ3N0YXR1cyddKSB7XG4gICAgICAgICAgICAgIGl6aVRvYXN0LnN1Y2Nlc3Moe1xuICAgICAgICAgICAgICAgIHRpbWVvdXQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAndG9wUmlnaHQnLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGpzb25bJ3N1Y2Nlc3NfbWVzc2FnZSddXG4gICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uID0gJCgnLmJhc2VfdXJsJykuYXR0cignaHJlZicpO1xuICAgICAgICAgICAgICB9LCAzMDAwKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaXppVG9hc3Qud2FybmluZyh7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3BSaWdodCcsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ1dlIGNvdWxkblxcJ3QgdmVyaWZ5IHlvdXIgYWNjb3VudC4gUGxlYXNlIGNoZWNrIHRoZSBPVFAnXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpemlUb2FzdC5lcnJvcih7XG4gICAgICAgICAgcG9zaXRpb246ICd0b3BSaWdodCcsXG4gICAgICAgICAgbWVzc2FnZTogJ1BsZWFzZSBlbnRlciBhIHZhbGlkIE9UUCdcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAkKCcjZm9yZ290LXBhc3N3b3JkLWJ0bicpLmNsaWNrKGZ1bmN0aW9uKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgJCgnI2xvZ2luLXZpZXcnKS5oaWRlKCk7XG4gICAgICAkKCcjZm9yZ290LXBhc3N3b3JkLXZpZXcnKS5zaG93KCk7XG4gICAgICBcbiAgICB9KTtcblxuICAgICQoJyNwYXNzd29yZC1yZXNldC1idXR0b24nKS5jbGljayhmdW5jdGlvbihlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIGNvbnN0IGVtYWlsID0gJCgnI3Jlc2V0LXBhc3N3b3JkLWVtYWlsJykudmFsKCk7XG4gICAgICBjb25zdCByZXNldEJ1dHRvbiA9ICQoJyNwYXNzd29yZC1yZXNldC1idXR0b24nKTtcblxuICAgICAgaWYoZW1haWwubGVuZ3RoID09IDApIHtcbiAgICAgICAgaXppVG9hc3Qud2FybmluZyh7XG4gICAgICAgICAgcG9zaXRpb246ICd0b3BSaWdodCcsXG4gICAgICAgICAgbWVzc2FnZTogJ1BsZWFzZSBlbnRlciB5b3VyIGFjY291bnQgZW1haWwnXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzZXRCdXR0b24udGV4dCgnUExFQVNFIFdBSVQnKTtcbiAgICAgICAgcmVzZXRCdXR0b24udG9nZ2xlQ2xhc3MoJ2Rpc2FibGVkJyk7XG4gIFxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgIHVybDogJ2luZGV4LnBocD9wYXRoPWFjY291bnQvZm9yZ290dGVuJyxcbiAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgICAgICBkYXRhOiB7IFxuICAgICAgICAgICAgZW1haWw6IGVtYWlsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoanNvbikge1xuICAgICAgICAgICAgcmVzZXRCdXR0b24udGV4dCgnUkVTRVQgUEFTU1dPUkQnKTtcbiAgICAgICAgICAgIHJlc2V0QnV0dG9uLnRvZ2dsZUNsYXNzKCdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgJCgnI3Jlc2V0LXBhc3N3b3JkLWVtYWlsJykudmFsKCcnKTtcbiAgXG4gICAgICAgICAgICBpZiAoanNvblsnc3RhdHVzJ10pIHtcbiAgICAgICAgICAgICAgaXppVG9hc3Quc3VjY2Vzcyh7XG4gICAgICAgICAgICAgICAgdGltZW91dDogZmFsc2UsXG4gICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3BSaWdodCcsXG4gICAgICAgICAgICAgICAgbWVzc2FnZToganNvblsndGV4dF9tZXNzYWdlJ11cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBpemlUb2FzdC53YXJuaW5nKHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcFJpZ2h0JyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnV2UgY291bGRuXFwndCBmaW5kIGFuIGFjY291bnQgd2l0aCB0aGF0IGVtYWlsIGFkZHJlc3MnXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAkKCcjZmFybWVyLXJlZ2lzdGVyLWJ1dHRvbicpLmNsaWNrKGZ1bmN0aW9uKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgY29uc3QgZmlyc3ROYW1lID0gJCgnI2Zhcm1lci1maXJzdC1uYW1lJykudmFsKCk7XG4gICAgICBjb25zdCBsYXN0TmFtZSA9ICQoJyNmYXJtZXItbGFzdC1uYW1lJykudmFsKCk7XG4gICAgICBjb25zdCBlbWFpbCA9ICQoJyNmYXJtZXItZW1haWwnKS52YWwoKTtcbiAgICAgIGNvbnN0IHBob25lID0gJCgnI2Zhcm1lci1waG9uZScpLnZhbCgpO1xuICAgICAgY29uc3QgZmFybWVyVHlwZSA9ICQoJyNmYXJtZXItdHlwZScpLnZhbCgpO1xuICAgICAgY29uc3QgZmFybUxvY2F0aW9uID0gJCgnI2Zhcm1lci1sb2NhdGlvbicpLnZhbCgpO1xuICAgICAgY29uc3QgcHJvZHVjZURlc2NyaXB0aW9uID0gJCgnZmFybWVyLXByb2R1Y2UtZ3Jvd24nKS52YWwoKTtcblxuICAgICAgY29uc3QgcmVnaXN0ZXJCdXR0b24gPSAkKCcjZmFybWVyLXJlZ2lzdGVyLWJ1dHRvbicpO1xuXG4gICAgICBpZihncmVjYXB0Y2hhLmdldFJlc3BvbnNlKCkgPT0gJycpIHtcbiAgICAgICAgaXppVG9hc3Qud2FybmluZyh7XG4gICAgICAgICAgcG9zaXRpb246ICd0b3BSaWdodCcsXG4gICAgICAgICAgbWVzc2FnZTogJ1BsZWFzZSBjb21wbGV0ZSBjYXB0Y2hhJ1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmKCQoJyNmYXJtZXItcmVnaXN0cmF0aW9uLWZvcm0nKVswXS5yZXBvcnRWYWxpZGl0eSgpKSB7XG4gICAgICAgICAgaXppVG9hc3Quc3VjY2Vzcyh7XG4gICAgICAgICAgICBwb3NpdGlvbjogJ3RvcFJpZ2h0JyxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdUaGFua3MgZm9yIHJlZ2lzdGVyaW5nLiBXZVxcJ2xsIGdldCBpbiB0b3VjaCdcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgICQoJyNmYXJtZXItcmVnaXN0cmF0aW9uLWZvcm0nKVswXS5yZXNldCgpO1xuICAgICAgICAgIC8vIHJlZ2lzdGVyQnV0dG9uLnRleHQoJ1BMRUFTRSBXQUlUJyk7XG4gICAgICAgICAgLy8gcmVnaXN0ZXJCdXR0b24udG9nZ2xlQ2xhc3MoJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gJC5hamF4KHtcbiAgICAgICAgICAvLyAgIHVybDogJ2luZGV4LnBocD9wYXRoPWFjY291bnQvZmFybWVycmVnaXN0ZXIvcmVnaXN0ZXInLFxuICAgICAgICAgIC8vICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICAgIC8vICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgICAgICAvLyAgIGRhdGE6IHsgXG4gICAgICAgICAgLy8gICAgIG5hbWU6IGZpcnN0TmFtZSArICcgJyArIGxhc3ROYW1lLFxuICAgICAgICAgIC8vICAgICBlbWFpbDogZW1haWwsXG4gICAgICAgICAgLy8gICAgIHRlbGVwaG9uZTogcGhvbmVcbiAgICAgICAgICAvLyAgIH0sXG4gICAgICAgICAgLy8gICBzdWNjZXNzOiBmdW5jdGlvbiAoanNvbikge1xuICAgICAgICAgIC8vICAgICByZWdpc3RlckJ1dHRvbi50ZXh0KCdSRUdJU1RFUicpO1xuICAgICAgICAgIC8vICAgICByZWdpc3RlckJ1dHRvbi50b2dnbGVDbGFzcygnZGlzYWJsZWQnKTtcblxuICAgICAgICAgIC8vICAgICBpZiAoanNvblsnc3RhdHVzJ10pIHtcbiAgICAgICAgICAvLyAgICAgICBpemlUb2FzdC5zdWNjZXNzKHtcbiAgICAgICAgICAvLyAgICAgICAgIHBvc2l0aW9uOiAndG9wUmlnaHQnLFxuICAgICAgICAgIC8vICAgICAgICAgbWVzc2FnZToganNvblsnc3VjY2Vzc19tZXNzYWdlJ11cbiAgICAgICAgICAvLyAgICAgICB9KTtcblxuICAgICAgICAgIC8vICAgICAgICQoJyNmYXJtZXItcmVnaXN0cmF0aW9uLWZvcm0nKVswXS5yZXNldCgpO1xuXG4gICAgICAgICAgLy8gICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gICAgICAgaXppVG9hc3Qud2FybmluZyh7XG4gICAgICAgICAgLy8gICAgICAgICBwb3NpdGlvbjogJ3RvcFJpZ2h0JyxcbiAgICAgICAgICAvLyAgICAgICAgIHRpdGxlOiAnT29wcycsXG4gICAgICAgICAgLy8gICAgICAgICBtZXNzYWdlOiAnV2UgY291bGRuXFwndCByZWdpc3RlciB5b3UuIFBsZWFzZSB0cnkgYWdhaW4nXG4gICAgICAgICAgLy8gICAgICAgfSk7XG4gICAgICAgICAgLy8gICAgIH1cbiAgICAgICAgICAvLyAgIH1cbiAgICAgICAgICAvLyB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxufSkoalF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KTtcbiJdfQ==
